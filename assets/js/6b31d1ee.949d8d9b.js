(self.webpackChunkjarbird_docs=self.webpackChunkjarbird_docs||[]).push([[882],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,b=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(b,l(l({ref:t},u),{},{components:n})):a.createElement(b,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8215:function(e,t,n){"use strict";var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:i},t)}},1395:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var a=n(7294),i=n(944),r=n(6010),l="tabItem_1uMI",o="tabItemActive_2DSg";var s=37,p=39;var u=function(e){var t=e.lazy,n=e.block,u=e.defaultValue,d=e.values,c=e.groupId,m=e.className,b=(0,i.Z)(),h=b.tabGroupChoices,g=b.setTabGroupChoices,f=(0,a.useState)(u),k=f[0],v=f[1],y=a.Children.toArray(e.children),N=[];if(null!=c){var w=h[c];null!=w&&w!==k&&d.some((function(e){return e.value===w}))&&v(w)}var j=function(e){var t=e.currentTarget,n=N.indexOf(t),a=d[n].value;v(a),null!=c&&(g(c,a),setTimeout((function(){var e,n,a,i,r,l,s,p;(e=t.getBoundingClientRect(),n=e.top,a=e.left,i=e.bottom,r=e.right,l=window,s=l.innerHeight,p=l.innerWidth,n>=0&&r<=p&&i<=s&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(o),setTimeout((function(){return t.classList.remove(o)}),2e3))}),150))},T=function(e){var t,n;switch(e.keyCode){case p:var a=N.indexOf(e.target)+1;n=N[a]||N[0];break;case s:var i=N.indexOf(e.target)-1;n=N[i]||N[N.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},m)},d.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,className:(0,r.Z)("tabs__item",l,{"tabs__item--active":k===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:T,onFocus:j,onClick:j},n)}))),t?(0,a.cloneElement)(y.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==k})}))))}},9443:function(e,t,n){"use strict";var a=(0,n(7294).createContext)(void 0);t.Z=a},944:function(e,t,n){"use strict";var a=n(7294),i=n(9443);t.Z=function(){var e=(0,a.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e}},1744:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return d},default:function(){return m}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),l=n(1395),o=n(8215),s={title:"Simple library - A minimal demo",tags:"tutorial",sidebar_label:"Simple library",sidebar_position:2},p=void 0,u={unversionedId:"tutorials/simplelib",id:"tutorials/simplelib",isDocsHomePage:!1,title:"Simple library - A minimal demo",description:"Let's take a look at the simplest sample project.",source:"@site/docs/tutorials/simplelib.mdx",sourceDirName:"tutorials",slug:"/tutorials/simplelib",permalink:"/jarbird/docs/tutorials/simplelib",editUrl:"https://github.com/hkhc/jarbird-docs/docs/tutorials/simplelib.mdx",version:"current",sidebarPosition:2,frontMatter:{title:"Simple library - A minimal demo",tags:"tutorial",sidebar_label:"Simple library",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/jarbird/docs/tutorials/index"},next:{title:"Library with Signature",permalink:"/jarbird/docs/tutorials/samplelibsign"}},d=[{value:"pom.yaml",id:"pomyaml",children:[]},{value:"build.gradle",id:"buildgradle",children:[]},{value:"Run it",id:"run-it",children:[]}],c={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Let's take a look at the simplest sample project."),(0,r.kt)("p",null,"The sample project is ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hkhc/jarbird-samples/tree/master/simplelib"},"here"),". The project contains build scripts in both Groovy and Kotlin. Pick the one you prefer. By default, the Groovy version (",(0,r.kt)("inlineCode",{parentName:"p"},"build.script"),") is executed. If you want to try the Kotlin version, use the command line with ",(0,r.kt)("inlineCode",{parentName:"p"},"-c settings.gradle.kts")," option."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# use build.script\n$ ./gradlew tasks \n# use build.script.kts\n$ ./gradlew -c settings.gradle.kts tasks\n")),(0,r.kt)("p",null,"It is an absolute minimal Java library that contains a single Java class ",(0,r.kt)("inlineCode",{parentName:"p"},"samplelib.Hello")," that do trivial work. In this minimal example, we are going to publish it to ",(0,r.kt)("strong",{parentName:"p"},"Maven Local repository")," so that other projects on your computer can make use of it. We don't need any remote credential set up for this example. By default, the Maven Local repository is located at ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.m2/repository")," for Unix/macOS or ",(0,r.kt)("inlineCode",{parentName:"p"},"C:\\Users\\{your-username}\\.m2\\repository")," for Windows. We will check our result of publishing there. (To keep the description simple, I will use the Unix style path from now on, please adapt it for Windows environment)."),(0,r.kt)("h2",{id:"pomyaml"},"pom.yaml"),(0,r.kt)("p",null,"First, we look at the ",(0,r.kt)("inlineCode",{parentName:"p"},"pom.yaml")," file. It is a Jarbird plugin-specific file to specify the information about your component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="pom.yaml"',title:'"pom.yaml"'},"group: jarbirdsamples\nartifactId: simplelib\nversion: 1.0-SNAPSHOT\n")),(0,r.kt)("p",null,"So here is the typical ",(0,r.kt)("a",{parentName:"p",href:"https://maven.apache.org/guides/mini/guide-naming-conventions.html"},"GAV")," (Group, Artifact ID, Version) coordinate of Java component. In the good old days of building Java library, we put this information in ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle"),". The benefit of taking that out of ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle")," will be obvious when we work on more sophisticated scenarios. It is also OK to leave this information in ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle"),". We can even omit artifactId, then the project name (usually the project directory name) will be the ",(0,r.kt)("inlineCode",{parentName:"p"},"artifactId"),"."),(0,r.kt)("p",null,"Note that the version of our component is suffixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"-SNAPSHOT"),", which signifies that the component is a snapshot component. Snapshot components will not be signed, which save us some effort to make our minimal component works."),(0,r.kt)("h2",{id:"buildgradle"},"build.gradle"),(0,r.kt)("p",null,"The next thing is our familiar ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle"),". First, we have the plugin declaration at the top of the file."),(0,r.kt)(l.Z,{defaultValue:"buildgradle-1",values:[{label:"build.gradle",value:"buildgradle-1"},{label:"build.gradle.kts",value:"buildgradlekts"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"buildgradle-1",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy",metastring:"{3}","{3}":!0},"plugins {\n    id 'java'\n    id 'io.hkhc.jarbird' version '0.7.0'\n}\n// ...\n"))),(0,r.kt)(o.Z,{value:"buildgradlekts",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"{3}","{3}":!0},'plugins {\n    id("java")\n    id("io.hkhc.jarbird") version "0.7.0"\n}\n// ...\n')))),(0,r.kt)("p",null,"The Jarbird plugin setups (almost) everything we need to publish components, including applying plugins, setting up publication definition, creating POM file, etc."),(0,r.kt)("p",null,"The last bit we need is to tell the Jarbird plugin that we publish our component to Maven Local repository."),(0,r.kt)(l.Z,{defaultValue:"buildgradle-2",values:[{label:"build.gradle",value:"buildgradle-2"},{label:"build.gradle.kts",value:"buildgradlekts-1"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"buildgradle-2",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"// ...\njarbird {\n    pub {\n        mavenLocal() // see the info block below\n    }\n}\n// ...\n"))),(0,r.kt)(o.Z,{value:"buildgradlekts-1",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"// ...\njarbird {\n    pub {\n        mavenLocal() // see the info block below\n    }\n}\n// ...\n")))),(0,r.kt)("p",null,"All configurations that we tell will be in the ",(0,r.kt)("inlineCode",{parentName:"p"},"jarbird")," extension. This block indicates we have one ",(0,r.kt)("inlineCode",{parentName:"p"},"pub")," (means publication) which will be published to Maven Local repository, by the ",(0,r.kt)("inlineCode",{parentName:"p"},"mavenLocal()")," function. By default, the Jarbird plugin configures the ",(0,r.kt)("inlineCode",{parentName:"p"},"pub")," to sign the artefacts before publishing."),(0,r.kt)("p",null,"That's it!"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mavenLocal()")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"jarbird")," extension block is not the same as the ",(0,r.kt)("inlineCode",{parentName:"p"},"mavenLocal()")," that could be specified in ",(0,r.kt)("inlineCode",{parentName:"p"},"repositories()")," block. The latter refers to the repository to resolve (aka download) dependencies, and the former refers to the repository that we publish our artefacts."))),(0,r.kt)("h2",{id:"run-it"},"Run it"),(0,r.kt)("p",null,"Let's take a look at the Gradle tasks provided by the Jarbird plugin. In your shell which the current directory is the ",(0,r.kt)("inlineCode",{parentName:"p"},"simplelib"),", we are working with. We list the available tasks by:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ ./gradlew tasks\n")),(0,r.kt)("p",null,"We see a section that we may not familiar with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Jarbird publishing tasks\n------------------------\njbPublish - Publish\njbPublishSimplelib - Publish module 'simplelib' to all targeted repositories\njbPublishSimplelibToMavenLocal - Publish module 'simplelib' to Maven Local repository jbPublishToMavenLocal - Publish to Maven Local repository\n")),(0,r.kt)("p",null,"All Gradle tasks added by the Jarbird plugin are under the group 'Jarbird publishing tasks' and prefixed by 'jb'. So let's publish our component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ ./gradlew jbPublish\nBuild with Groovy build script\n\n> Task :jbDokkaHtmlSimplelib\nInitializing plugins\nDokka is performing: documentation for simplelib\nValidity check\nCreating documentation models\n\nWARN: The registry key 'java.correct.class.type.by.place.resolve.scope' accessed, but not loaded yet\n\n> Task :jbDokkaHtmlSimplelib\nTransforming documentation model before merging\nMerging documentation models\nTransforming documentation model after merging\nCreating pages\nTransforming pages\nRendering\n\n\nBUILD SUCCESSFUL in 10s\n")),(0,r.kt)("p",null,"We may ignore the warning at the moment. All the execution did are compiling and archive the source code, building a Jar file for source code, generating and building a Jar file for document pages, and publishing them to Maven Local repository. To check if we have published the component successfully, check the directory ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.m2/repository/jarbirdsamples/simplelib/1.0-SNAPSHOT")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ ls -1 ~/.m2/repository/jarbirdsamples/simplelib/1.0-SNAPSHOT\nmaven-metadata-local.xml\nsimplelib-1.0-SNAPSHOT-javadoc.jar\nsimplelib-1.0-SNAPSHOT-sources.jar\nsimplelib-1.0-SNAPSHOT.jar\nsimplelib-1.0-SNAPSHOT.module\nsimplelib-1.0-SNAPSHOT.pom\n")),(0,r.kt)("p",null,"So we have the Jar file itself, the archive of source code, the archive of javadoc, POM file. Everything we need as a Java component in the Maven repository is present (except signatures, which we will come to that shortly)."),(0,r.kt)("p",null,"We could use the component in other projects of the same computer, by adding this line to the ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle")," of these projects:"),(0,r.kt)(l.Z,{defaultValue:"buildgradle-3",values:[{label:"build.gradle",value:"buildgradle-3"},{label:"build.gradle.kts",value:"buildgradlekts-2"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"buildgradle-3",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy",metastring:"{6}","{6}":!0},"buildscript {\n    mavenLocal()\n    // ... other repositories\n}\ndependencies {\n    implementation 'jarbirdsamples:simplelib:1.0'\n    // ... other dependencies\n}\n"))),(0,r.kt)(o.Z,{value:"buildgradlekts-2",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"{6}","{6}":!0},'buildscript {\n    mavenLocal()\n    // ... other repositories\n}\ndependencies {\n    implementation("jarbirdsamples:simplelib:1.0")\n    // ... other dependencies\n}\n')))),(0,r.kt)("p",null,"We have completed our first trial of the Jarbird plugin."))}m.isMDXComponent=!0},6010:function(e,t,n){"use strict";function a(e){var t,n,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(i&&(i+=" "),i+=n);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}function i(){for(var e,t,n=0,i="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(i&&(i+=" "),i+=t);return i}n.d(t,{Z:function(){return i}})}}]);