(self.webpackChunkjarbird_docs=self.webpackChunkjarbird_docs||[]).push([[133],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return s},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),u=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(a),m=r,b=c["".concat(d,".").concat(m)]||c[m]||p[m]||l;return a?n.createElement(b,i(i({ref:t},s),{},{components:a})):n.createElement(b,i({ref:t},s))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8215:function(e,t,a){"use strict";var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},1395:function(e,t,a){"use strict";a.d(t,{Z:function(){return s}});var n=a(7294),r=a(944),l=a(6010),i="tabItem_1uMI",o="tabItemActive_2DSg";var d=37,u=39;var s=function(e){var t=e.lazy,a=e.block,s=e.defaultValue,p=e.values,c=e.groupId,m=e.className,b=(0,r.Z)(),g=b.tabGroupChoices,k=b.setTabGroupChoices,f=(0,n.useState)(s),v=f[0],h=f[1],y=n.Children.toArray(e.children),N=[];if(null!=c){var j=g[c];null!=j&&j!==v&&p.some((function(e){return e.value===j}))&&h(j)}var T=function(e){var t=e.currentTarget,a=N.indexOf(t),n=p[a].value;h(n),null!=c&&(k(c,n),setTimeout((function(){var e,a,n,r,l,i,d,u;(e=t.getBoundingClientRect(),a=e.top,n=e.left,r=e.bottom,l=e.right,i=window,d=i.innerHeight,u=i.innerWidth,a>=0&&l<=u&&r<=d&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(o),setTimeout((function(){return t.classList.remove(o)}),2e3))}),150))},w=function(e){var t,a;switch(e.keyCode){case u:var n=N.indexOf(e.target)+1;a=N[n]||N[0];break;case d:var r=N.indexOf(e.target)-1;a=N[r]||N[N.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},m)},p.map((function(e){var t=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,l.Z)("tabs__item",i,{"tabs__item--active":v===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:w,onFocus:T,onClick:T},a)}))),t?(0,n.cloneElement)(y.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},9443:function(e,t,a){"use strict";var n=(0,a(7294).createContext)(void 0);t.Z=n},944:function(e,t,a){"use strict";var n=a(7294),r=a(9443);t.Z=function(){var e=(0,n.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e}},1067:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var n=a(2122),r=a(9756),l=(a(7294),a(3905)),i=a(1395),o=a(8215),d={title:"pub the Publication",tags:"main",sidebar_position:6},u=void 0,s={unversionedId:"reference/pub",id:"reference/pub",isDocsHomePage:!1,title:"pub the Publication",description:'In terms of the Jarbird plugin, "pub" refers to a unit of publication. It usually means publishing a JAR artefact together with related items like source code archive, javadoc archive, POM file, and their signatures. For Gradle plugin publishing, a pub also involves publishing a pseudo component that contains the plugin ID.',source:"@site/docs/reference/pub.md",sourceDirName:"reference",slug:"/reference/pub",permalink:"/jarbird/docs/reference/pub",editUrl:"https://github.com/hkhc/jarbird-docs/docs/reference/pub.md",version:"current",sidebarPosition:6,frontMatter:{title:"pub the Publication",tags:"main",sidebar_position:6},sidebar:"referenceSidebar",previous:{title:"pom.yaml Reference",permalink:"/jarbird/docs/reference/pom-reference"},next:{title:"Properties Reference",permalink:"/jarbird/docs/reference/properties-ref"}},p=[{value:"pub with variant",id:"pub-with-variant",children:[]},{value:"Repositories",id:"repositories",children:[]},{value:"Extension level setting, pub level setting",id:"extension-level-setting-pub-level-setting",children:[]},{value:'Signing <a href="#signing"></a>',id:"signing",children:[]},{value:"Source set specification",id:"source-set-specification",children:[{value:"JAR project",id:"jar-project",children:[]},{value:'Android AAR project<a href="#androidaar"></a>',id:"android-aar-project",children:[]},{value:"Gradle plugin project",id:"gradle-plugin-project",children:[]}]},{value:"Variant augmented coordinate",id:"variant-augmented-coordinate",children:[{value:"Variant with version",id:"variant-with-version",children:[]},{value:"Variant with artefact ID",id:"variant-with-artefact-id",children:[]},{value:"Make variant invisible and gain full control of coordinates",id:"make-variant-invisible-and-gain-full-control-of-coordinates",children:[]}]},{value:"Dokka configuration",id:"dokka-configuration",children:[]}],c={toc:p};function m(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,'In terms of the Jarbird plugin, "pub" refers to a unit of publication. It usually means publishing a JAR artefact together with related items like source code archive, javadoc archive, POM file, and their signatures. For Gradle plugin publishing, a pub also involves publishing a pseudo component that contains the plugin ID.'),(0,l.kt)("p",null,"A pub also describes the remote repositories it targets. One pub maybe published to one or multiple, heterogenous types of remote repositories."),(0,l.kt)("p",null,"In build script, we declare a pub in the ",(0,l.kt)("inlineCode",{parentName:"p"},"jarbird")," block:"),(0,l.kt)(i.Z,{defaultValue:"buildgradle",values:[{label:"build.gradle",value:"buildgradle"},{label:"build.gradle.kts",value:"buildgradlekts"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},"jarbird {\n    pub {}\n}\n"))),(0,l.kt)(o.Z,{value:"buildgradlekts",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"jarbird {\n    pub {}\n}\n")))),(0,l.kt)("p",null,"This tells the Jarbird plugin that we are going to publish the artefacts built by this project. It will also set up the tasks for archiving source code, generating javadoc and archive it, and signing all of them. It generates tasks to publish all of these to Maven local repository."),(0,l.kt)("p",null,"So we can run the plugin task by"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./gradlew jbPUblishToMavneLocal\n")),(0,l.kt)("p",null,"or simply"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./gradlew jbPublish\n")),(0,l.kt)("p",null,"which publishes everything to everywhere declared."),(0,l.kt)("h2",{id:"pub-with-variant"},"pub with variant"),(0,l.kt)("p",null,"In case there are multiple variants of POM information in pom.yaml, we link the pub with pom.yaml by providing a variant name. For example, in an Android project we have ",(0,l.kt)("inlineCode",{parentName:"p"},"pom.yaml")," like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="pom.yaml"',title:'"pom.yaml"'},"variant: debug\nartifactId: simpleaar-staging\n---\nvariant: release\nartifactId: simpleaar-production\n---\ngroup: jarbirdsamples\nversion: 1.0\npackaging: aar\n\n# ....\n")),(0,l.kt)("p",null,"Then we may declare the ",(0,l.kt)("inlineCode",{parentName:"p"},"pub"),"s like this:"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-1",values:[{label:"build.gradle",value:"buildgradle-1"},{label:"build.gradle.kts",value:"buildgradlekts-1"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-1",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle" {4}',title:'"build.gradle"',"{4}":!0},'// variant.name can be "debug" or "release"\nandroid.libraryVariants.configureEach { variant -> \n    jarbird {\n        pub(variant.name) {\n            mavenCentral()\n            from(variant)\n        }\n    }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-1",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="build.gradle.kts" {4}',title:'"build.gradle.kts"',"{4}":!0},'// variant.name can be "debug" or "release"\nandroid.libraryVariants.configureEach {\n    jarbird {\n        pub(name) {\n            mavenCentral()\n            from(this@configureEach)\n        }\n    }\n}\n')))),(0,l.kt)("p",null,"Then the Jarbird plugin knows the association of a particular ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," and a variant of POM."),(0,l.kt)("h2",{id:"repositories"},"Repositories"),(0,l.kt)("p",null,"We can define one or more repositories for each pub. Each of them is in the form of a function call."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Repository"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"mavenLocal()")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Maven local repository. It is included implicitly, so we don't need to specify this explicitly.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"properties-ref#mavencentral"},(0,l.kt)("inlineCode",{parentName:"a"},"mavenCentral()"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Maven Central")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"properties-ref#custommaven"},(0,l.kt)("inlineCode",{parentName:"a"},"mavenRepo(repo)"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Custom Maven repository. ",(0,l.kt)("inlineCode",{parentName:"td"},"repo")," is a string that represents the repository. It is used to match the setting of the repository in ",(0,l.kt)("inlineCode",{parentName:"td"},"gradle.properties"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"properties-ref#gradleportal"},(0,l.kt)("inlineCode",{parentName:"a"},"gradlePortal()"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Gradle Plugin Portal")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"properties-ref#artifactory"},(0,l.kt)("inlineCode",{parentName:"a"},"artifactory(repo)"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Artifactory repository.",(0,l.kt)("inlineCode",{parentName:"td"},"repo")," is a string that representation the repository. It is used to match the setting of a repository in ",(0,l.kt)("inlineCode",{parentName:"td"},"gradle.properties"))))),(0,l.kt)("h2",{id:"extension-level-setting-pub-level-setting"},"Extension level setting, pub level setting"),(0,l.kt)("p",null,"We may customize how a pub is published by adding directives to the ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," block or ",(0,l.kt)("inlineCode",{parentName:"p"},"jarbird")," block. ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," inherit all directives declared in the ",(0,l.kt)("inlineCode",{parentName:"p"},"jarbird")," extension block of the same project and the parent projects."),(0,l.kt)("p",null,"For example,"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-2",values:[{label:"build.gradle",value:"buildgradle-2"},{label:"build.gradle.kts",value:"buildgradlekts-2"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-2",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle"',title:'"build.gradle"'},"jarbird {\n    pub {\n        mavenCentral()\n    }\n}\n"))),(0,l.kt)(o.Z,{value:"buildgradlekts-2",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},"jarbird {\n    pub {\n        mavenCentral()\n    }\n}\n")))),(0,l.kt)("p",null,"declare a repository for the pub. On the other hand, the declation :"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-3",values:[{label:"build.gradle",value:"buildgradle-3"},{label:"build.gradle.kts",value:"buildgradlekts-3"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-3",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle"',title:'"build.gradle"'},'jarbird {\n    mavenCentral()\n    pub {\n        sourceSetNames("main")\n    }\n    pub {\n        sourceSetNames("qa")\n    }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-3",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},'jarbird {\n    mavenCentral()\n    pub {\n        sourceSetNames("main")\n    }\n    pub {\n        sourceSetNames("qa")\n    }\n}\n')))),(0,l.kt)("p",null,"make ",(0,l.kt)("inlineCode",{parentName:"p"},"mavenCentral()")," available to both ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," in the extension block."),(0,l.kt)("p",null,"We can even put the directives at the root project so that all sub-projects inherit them."),(0,l.kt)(i.Z,{defaultValue:"buildgradle-4",values:[{label:"build.gradle",value:"buildgradle-4"},{label:"build.gradle.kts",value:"buildgradlekts-4"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-4",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="root project build.gradle"',title:'"root',project:!0,'build.gradle"':!0},"jarbird {\n    mavenCentral()\n}\n"))),(0,l.kt)(o.Z,{value:"buildgradlekts-4",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="root project build.gradle.kts"',title:'"root',project:!0,'build.gradle.kts"':!0},"jarbird {\n    mavenCentral()\n}\n")))),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"pub"),"s themselves are not inherited. The pub declared in root project is not available in sub-projects."))),(0,l.kt)("h2",{id:"signing"},"Signing ",(0,l.kt)("a",{href:"#signing"})),(0,l.kt)("p",null,"By default, the Jarbird plugin attempts to set up artefact signing for each pub. However, no signing is performed for a pub with a version suffixed by `-SNAPSHOT'."),(0,l.kt)("p",null,"We can disable signing explicitly by using ",(0,l.kt)("inlineCode",{parentName:"p"},"doNotSign()")," in pub or jarbird block."),(0,l.kt)("p",null,"Signing needs a key pair. The key pair is generated by GnuPG. Two formats of key stores of GnuPG are available."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GnuPG version 2.1 or before use keyring format."),(0,l.kt)("li",{parentName:"ul"},"GnuPG version 2.2 or after use key box format.")),(0,l.kt)("p",null,"They need different ",(0,l.kt)("a",{parentName:"p",href:"properties-ref#artifactsigning"},"settings")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"gradle.properties"),"."),(0,l.kt)("p",null,"We can specify which key format to use by using the following directives:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"signWithKeybox()")," : use keybox to access key pair"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"signWithKeyring()")," : use keyring to access key pair")),(0,l.kt)("p",null,"If we specify one type of key store, and the Jarbird plugin detects that only another type of key store setting is available in ",(0,l.kt)("inlineCode",{parentName:"p"},"gradle.properties"),", a warning will be shown, and the key store type will be determined by the\n",(0,l.kt)("a",{parentName:"p",href:"properties-ref#artifactsigning"},"settings")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"gradle.properties"),"."),(0,l.kt)("h2",{id:"source-set-specification"},"Source set specification"),(0,l.kt)("p",null,"Normally, Jarbird determines automatically the code to be built as a library. It also tries to figure out the source code directory to build documentation."),(0,l.kt)("h3",{id:"jar-project"},"JAR project"),(0,l.kt)("p",null,"Normally we don't need to do anything special in ",(0,l.kt)("inlineCode",{parentName:"p"},"pub {}")," declaration. Jarbird plugin will look for ",(0,l.kt)("inlineCode",{parentName:"p"},'project.component["java"]')," for artifacts built and use the ",(0,l.kt)("inlineCode",{parentName:"p"},"JavaPluginConvention")," class to determine the source sets for documentation."),(0,l.kt)("p",null,"We may provide alternate component by"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-5",values:[{label:"build.gradle",value:"buildgradle-5"},{label:"build.gradle.kts",value:"buildgradlekts-5"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-5",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="root project build.gradle"',title:'"root',project:!0,'build.gradle"':!0},"jarbird {\n    pub {\n        from(components.custom)\n    }\n}\n"))),(0,l.kt)(o.Z,{value:"buildgradlekts-5",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="root project build.gradle.kts"',title:'"root',project:!0,'build.gradle.kts"':!0},'jarbird {\n    pub {\n        from(components["custom"])\n    }\n}\n')))),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"#androidaar"},"Android")," section for more details on using ",(0,l.kt)("inlineCode",{parentName:"p"},"components"),"with Android project."),(0,l.kt)("p",null,"In case we want to publish two components in single project, we may also specify code to publish by ",(0,l.kt)("inlineCode",{parentName:"p"},"SourceSet"),":"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-6",values:[{label:"build.gradle",value:"buildgradle-6"},{label:"build.gradle.kts",value:"buildgradlekts-6"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-6",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="root project build.gradle"',title:'"root',project:!0,'build.gradle"':!0},'sourceSet {\n    // implicitly the new source set will be at src/altSourceSet1 directory\n    altSourceSet1 { }\n    // implicitly the new source set will be at src/altSourceSet2 directory\n    altSourceSet2 { }\n}\n\njarbird {\n    pub("pub1") {\n        from(project.sourceSets.altSourceSet1) // link to sourceSet        \n    }\n    pub("pub2") {\n        from(project.sourceSets.altSourceSet2) // link to sourceSet        \n    }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-6",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="root project build.gradle.kts"',title:'"root',project:!0,'build.gradle.kts"':!0},'sourceSet {\n    // implicitly the new source set will be at src/altSourceSet1 directory\n    create("altSourceSet1") { }\n    }\n    // implicitly the new source set will be at src/altSourceSet2 directory\n    create("altSourceSet2") { }\n}\n\njarbird {\n    pub("pub1") {\n        from(project.sourceSets["altSourceSet1"])        \n    }\n    pub("pub2") {\n        from(project.sourceSets["altSourceSet2"])        \n    }\n}\n')))),(0,l.kt)("p",null,"Library compilation and document generation will be based on the source set specified in the ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," block."),(0,l.kt)("h3",{id:"android-aar-project"},"Android AAR project",(0,l.kt)("a",{href:"#androidaar"})),(0,l.kt)("p",null,"Android AAR projects come with variants. We have a component instance for each of the variant of the Android project. So the following declaration can succeed."),(0,l.kt)(i.Z,{defaultValue:"buildgradle-7",values:[{label:"build.gradle",value:"buildgradle-7"},{label:"build.gradle.kts",value:"buildgradlekts-7"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-7",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle" {4}',title:'"build.gradle"',"{4}":!0},'// variant.name can typically be "debug" or "release"\nandroid.libraryVariants.configureEach { variant -> \n    jarbird {\n        pub(variant.name) {\n            mavenCentral()\n            from(components[variant])\n        }\n    }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-7",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="build.gradle.kts" {4}',title:'"build.gradle.kts"',"{4}":!0},'// variant.name can be typically "debug" or "release"\nandroid.libraryVariants.configureEach {\n    jarbird {\n        pub(name) {\n            mavenCentral()\n            from(components[name])\n        }\n    }\n}\n')))),(0,l.kt)("p",null,"However, the source set of Android project is resolved in a different way than the usual JAR project. So it will fail to generate proper documentation."),(0,l.kt)("p",null,"The proper way to declare ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," for an Android project is to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"jarbird-android")," plugin and provide a ",(0,l.kt)("inlineCode",{parentName:"p"},"LibraryVariant")," instance to ",(0,l.kt)("inlineCode",{parentName:"p"},"from()")," method"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-8",values:[{label:"build.gradle",value:"buildgradle-8"},{label:"build.gradle.kts",value:"buildgradlekts-8"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-8",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle" {4}',title:'"build.gradle"',"{4}":!0},"plugin {\n    id 'io.hkhc.jarbird-android' version '0.7.0' \n}\n\n// variant.name can be \"debug\" or \"release\"\nandroid.libraryVariants.configureEach { variant -> \n    jarbird {\n        pub(variant.name) {\n            mavenCentral()\n            from(variant)\n        }\n    }\n}\n"))),(0,l.kt)(o.Z,{value:"buildgradlekts-8",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="build.gradle.kts" {4}',title:'"build.gradle.kts"',"{4}":!0},'plugin {\n    id("io.hkhc.jarbird-android") version "0.7.0"    \n}\n\n// variant.name can be "debug" or "release"\nandroid.libraryVariants.configureEach {\n    jarbird {\n        pub(name) {\n            mavenCentral()\n            from(this@configureEach)\n        }\n    }\n}\n')))),(0,l.kt)("p",null,"Then source set can be resolved correctly. It works even when our build type/flavour combination of Android project uses multiple source folders to build the project."),(0,l.kt)("h3",{id:"gradle-plugin-project"},"Gradle plugin project"),(0,l.kt)("p",null,"There is no special syntax for ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," syntax to publish the Gradle plugin. We can publish multiple Gradle plugins in one project, each of them is specified in a ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," block, linked to different variants of ",(0,l.kt)("inlineCode",{parentName:"p"},"pom.yaml"),"."),(0,l.kt)("p",null,"However, there is one limitation. We can have only one set of meta-information like website, scm information, etc. If there are multiple ",(0,l.kt)("inlineCode",{parentName:"p"},"pub"),"s for Gradle plugin publishing, these pieces of information are picked from the first ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," for Gradle plugin publishing. This limitation does not apply to normal JAR projects."),(0,l.kt)("h2",{id:"variant-augmented-coordinate"},"Variant augmented coordinate"),(0,l.kt)("p",null,"When we publish multiple ",(0,l.kt)("inlineCode",{parentName:"p"},"pub"),"s in one project, the GAV coordinate of components build with these ",(0,l.kt)("inlineCode",{parentName:"p"},"pub"),"s can be blended with the variant, so that we can publish distinguish components to repositories. There are three ways we combine the GAV as specified in ",(0,l.kt)("inlineCode",{parentName:"p"},"pom.yaml")," with the variant."),(0,l.kt)("h3",{id:"variant-with-version"},"Variant with version"),(0,l.kt)("p",null,"Consider the jarbird declaration and POM in a project:"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-9",values:[{label:"build.gradle",value:"buildgradle-9"},{label:"build.gradle.kts",value:"buildgradlekts-9"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-9",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},'jarbird {\n    mavenCentral()\n    pub("qa") {\n        from(sourceSets.qa)\n    }\n    pub("release") {\n        from(sourceSets.main)\n    }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-9",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'jarbird {\n    mavenCentral()\n    pub("qa") {\n        from(sourceSets.qa)\n    }\n    pub("release") {\n        from(sourceSets.main)\n    }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="pom.yaml"',title:'"pom.yaml"'},"group: mygroup\nartifactId: mylib\nversion: 1.0\n")),(0,l.kt)("p",null,"As a result, we publish two components with coordinates:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mygroup:mylib:1.0-qa")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mygroup:mylib:1.0-release"))),(0,l.kt)("p",null,"This is the default behaviour. If we prefer it to be stated explicitly, we add ",(0,l.kt)("inlineCode",{parentName:"p"},"variantWithVersion()")," :"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-10",values:[{label:"build.gradle",value:"buildgradle-10"},{label:"build.gradle.kts",value:"buildgradlekts-10"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-10",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:"{3}","{3}":!0},'jarbird {\n    mavenCentral()\n    variantWithVersion()\n    pub("qa") {\n        from(sourceSets.qa)\n    }\n    pub("release") {\n        from(sourceSets.main)\n    }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-10",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"{3}","{3}":!0},'jarbird {\n    mavenCentral()\n    variantWithVersion()\n    pub("qa") {\n        from(sourceSets.qa)\n    }\n    pub("release") {\n        from(sourceSets.main)\n    }\n}\n')))),(0,l.kt)("p",null,"Just like the repositories declaration, it can be in ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," block, ",(0,l.kt)("inlineCode",{parentName:"p"},"jarbird")," block in current project or parent project. and ",(0,l.kt)("inlineCode",{parentName:"p"},"pub")," get inherited settings from ",(0,l.kt)("inlineCode",{parentName:"p"},"jarbird")," blocks of the current project and all ancestor projects."),(0,l.kt)("h3",{id:"variant-with-artefact-id"},"Variant with artefact ID"),(0,l.kt)("p",null,"Suffixing version with variant may not be the best option for some situations. We may opt to combine variant with artifact ID :"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-11",values:[{label:"build.gradle",value:"buildgradle-11"},{label:"build.gradle.kts",value:"buildgradlekts-11"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-11",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:"{3}","{3}":!0},'jarbird {\n    mavenCentral()\n    variantWithArtifactID()\n    pub("qa") {\n        from(sourceSets.qa)\n    }\n    pub("release") {\n        from(sourceSets.main)\n    }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-11",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"{3}","{3}":!0},'jarbird {\n    mavenCentral()\n    variantWithArtifactID()\n    pub("qa") {\n        from(sourceSets.qa)\n    }\n    pub("release") {\n        from(sourceSets.main)\n    }\n}\n')))),(0,l.kt)("p",null,"Then the components to be published become:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mygroup:mylib-qa:1.0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mygroup:mylib-release:1.0"))),(0,l.kt)("h3",{id:"make-variant-invisible-and-gain-full-control-of-coordinates"},"Make variant invisible and gain full control of coordinates"),(0,l.kt)("p",null,"When automatic blending of coordinates are too restrictive and we want to take back full control of it. We may make the variant invisible in coordinates:"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-12",values:[{label:"build.gradle",value:"buildgradle-12"},{label:"build.gradle.kts",value:"buildgradlekts-12"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-12",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy",metastring:"{3}","{3}":!0},'jarbird {\n    mavenCentral()\n    variantInvisible()\n    pub("qa") {\n        from(sourceSets.qa)\n    }\n    pub("release") {\n        from(sourceSets.main)\n    }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-12",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"{3}","{3}":!0},'jarbird {\n    mavenCentral()\n    variantInvisible()\n    pub("qa") {\n        from(sourceSets.qa)\n    }\n    pub("release") {\n        from(sourceSets.main)\n    }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="pom.yaml"',title:'"pom.yaml"'},"---\nvariant: qa\ngroup: mygroup.qa\nartifactId: mylib.qa\n---\nvariant: main\ngroup: mygroup.release\nartifactId: mylib.release\n---\nversion: 1.0\n")),(0,l.kt)("p",null,"We use ",(0,l.kt)("inlineCode",{parentName:"p"},"variantInvisible()")," to disable the automatic blending variant to coordinates. Then we have multiple fragments of ",(0,l.kt)("inlineCode",{parentName:"p"},"pom.yaml")," to specify the coordinates for each of the variants. Then the result becomes:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mygroup.qa:mylib.qa:1.0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mygroup.release:mylib.release:1.0"))),(0,l.kt)("h2",{id:"dokka-configuration"},"Dokka configuration"),(0,l.kt)("p",null,"The Jarbird plugin configures the Dokka documentation engine to get proper source code and classpath based on the ",(0,l.kt)("inlineCode",{parentName:"p"},"jarbird")," block configuration. But sometimes we still want to perform customisation to the Dokka configuration like the title, layout, links to external documentation pages, etc."),(0,l.kt)("p",null,"We may inject the Dokka configuration in ",(0,l.kt)("inlineCode",{parentName:"p"},"jarbird")," block. For example, to add hyperlink to the references of the Java standard library :"),(0,l.kt)(i.Z,{defaultValue:"buildgradle-13",values:[{label:"build.gradle",value:"buildgradle-13"},{label:"build.gradle.kts",value:"buildgradlekts-13"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"buildgradle-13",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},'jarbird {\n    mavenCentral()\n    dokkaConfig {\n        dokkaSourceSets.forEach {\n            it.externalDocumentationLink("https://docs.gradle.org/current/javadoc/")\n        }\n    }\n    pub { }\n}\n'))),(0,l.kt)(o.Z,{value:"buildgradlekts-13",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'jarbird {\n    mavenCentral()\n    dokkaConfig {\n        dokkaSourceSets.forEach {\n            it.externalDocumentationLink("https://docs.gradle.org/current/javadoc/")\n        }\n    }\n    pub { }\n}\n')))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"dokkaConfig")," block provides a reference to ",(0,l.kt)("inlineCode",{parentName:"p"},"DokkaTask"),". It has been configured with proper ",(0,l.kt)("inlineCode",{parentName:"p"},"dokkaSourceSets")," block with ",(0,l.kt)("inlineCode",{parentName:"p"},"classpath")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"sourceRoot")," arguments. we can do further customisation in the ",(0,l.kt)("inlineCode",{parentName:"p"},"dokkaConfig")," block."))}m.isMDXComponent=!0},6010:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}a.d(t,{Z:function(){return r}})}}]);